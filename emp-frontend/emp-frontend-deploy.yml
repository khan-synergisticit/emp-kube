apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: emp-frontend
  name: emp-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emp-frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: emp-frontend
    spec:
      containers:
        - image: khanster/emp-frontend:latest
          imagePullPolicy: "Always"
          name: emp-frontend
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/app
              name: emp-frontend-cm0
            - mountPath: /root/.m2
              name: emp-frontend-claim1
      restartPolicy: Always
      volumes:
        - configMap:
            name: emp-frontend-cm0
          name: emp-frontend-cm0
        - name: emp-frontend-claim1
          persistentVolumeClaim:
            claimName: emp-frontend-claim1

---

apiVersion: v1
data:
  docker-compose.yml: |
    services:
      emp-frontend:
        # image: khanster/frontend:latest
        container_name: emp-frontend
        image: khanster/emp-frontend:latest
        ports:
          - "8080:8080"
        volumes:
          - .:/usr/app
          - ./.m2:/root/.m2

kind: ConfigMap
metadata:
  labels:
    app: emp-frontend
  name: emp-frontend-cm0

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: emp-frontend
  name: emp-frontend
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: emp-frontend

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: emp-frontend-claim1
  name: emp-frontend-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi